<Application x:Class="StangradCRM.App"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	StartupUri="View/StartupWindow.xaml">
	<Application.Resources>
		
		<Style TargetType="DataGrid" x:Key="DefaultDataGridStyle">
            <Setter Property="Margin" Value="5" />
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="GridLinesVisibility" Value="Horizontal" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="CanUserResizeColumns" Value="False" />
            <Setter Property="MinRowHeight" Value="30" />
            <Setter Property="HorizontalGridLinesBrush" Value="Silver" />
			<Setter Property="FontSize" Value="12" />
		</Style>
		
		<Style TargetType="DataGridRow" x:Key="DefaultDataGridRowStyle">
			<Style.Triggers>
				<Trigger Property="DataGridRow.IsSelected" Value="True">
					<Setter Property="Background" Value="#0068B3"></Setter>
					<Setter Property="BorderBrush" Value="#0068B3"></Setter>
				</Trigger>
			</Style.Triggers>
		</Style>
		
        <Style TargetType="DataGridCell" x:Key="DefaultDataGridCellStyle">
            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="Background" Value="#0068B3"></Setter>
                    <Setter Property="BorderBrush" Value="#0068B3"></Setter>
            		<Setter Property="Foreground" Value="White"></Setter>
                </Trigger>
            </Style.Triggers>
		</Style>
		
		<Style TargetType="DataGridCell" x:Key="NoIsSelectedDataGridCellStyle">
            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="Background" Value="White"></Setter>
            		<Setter Property="BorderBrush" Value="White"></Setter>
                	<Setter Property="Foreground" Value="Black"></Setter>
                </Trigger>
            </Style.Triggers>
		</Style>
		
		<Style TargetType="TextBlock" x:Key="OperationLinkStyle">
			<Setter Property="FontSize" Value="12"></Setter>
			<Style.Triggers>
				<Trigger Property="TextBlock.IsMouseOver" Value="True">
					<Setter Property="Cursor" Value="Hand"></Setter>
					<Setter Property="TextDecorations" Value="Underline"></Setter>
				</Trigger>
			</Style.Triggers>
		</Style>
		
		<Style TargetType="Button" x:Key="ButtonOperationGridStyle">
			<Setter Property="Foreground" Value="Black"></Setter>
			<Setter Property="Width" Value="20"></Setter>
			<Setter Property="Height" Value="20"></Setter>
			<Setter Property="VerticalAlignment" Value="Center"></Setter>
			<Setter Property="HorizontalAlignment" Value="Center"></Setter>
			<Setter Property="Background" Value="Transparent"></Setter>
			<Setter Property="BorderBrush" Value="Transparent"></Setter>
			<Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border 
                            CornerRadius="0"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"></ContentPresenter>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="Button.IsMouseOver" Value="True">
					<Setter Property="Cursor" Value="Hand"></Setter>
				</Trigger>
			</Style.Triggers>
		</Style>
		
		<Style TargetType="Button" BasedOn="{StaticResource ButtonOperationGridStyle}" x:Key="ButtonOperationGridAnimateStyle">
			<Style.Triggers>
				<Trigger Property="Button.IsMouseOver" Value="True">
					<Setter Property="Cursor" Value="Hand"></Setter>
					<Setter Property="Width" Value="22"></Setter>
					<Setter Property="Height" Value="22"></Setter>
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="DatePicker" x:Key="DefaultDatePickerStyle">
			<Setter Property="VerticalContentAlignment" Value="Center"></Setter>
			<Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
			<Setter Property="Height" Value="23"></Setter>
			<Setter Property="Margin" Value="0, 2, 0, 2"></Setter>
		</Style>
		
		<Style TargetType="TextBox" x:Key="DefaultTextBoxStyle">
			<Setter Property="VerticalContentAlignment" Value="Center"></Setter>
			<Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
			<Setter Property="Height" Value="25"></Setter>
			<Setter Property="Margin" Value="0, 2, 0, 2"></Setter>
		</Style>
		
		<Style TargetType="PasswordBox" x:Key="DefaultPasswordBoxStyle">
			<Setter Property="VerticalContentAlignment" Value="Center"></Setter>
			<Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
			<Setter Property="Height" Value="25"></Setter>
			<Setter Property="Margin" Value="0, 2, 0, 2"></Setter>
		</Style>
		
		<Style TargetType="Button" x:Key="DefaultButtonStyle">
			<Setter Property="Height" Value="30"></Setter>
			<Setter Property="VerticalContentAlignment" Value="Center"></Setter>
		</Style>
		
		<Style TargetType="GroupBox" x:Key="DefaultGroupBoxStyle">
			<Setter Property="Margin" Value="5"></Setter>
		</Style>
		
		<Style TargetType="ComboBox" x:Key="DefaultComboBoxStyle">
			<Setter Property="VerticalContentAlignment" Value="Center"></Setter>
			<Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
			<Setter Property="Height" Value="25"></Setter>
			<Setter Property="Margin" Value="0, 2, 0, 2"></Setter>
		</Style>
	
	</Application.Resources>
</Application>